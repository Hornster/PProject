@using System.Runtime.InteropServices
@model PProject.Models.Residences.BuildingListViewModel
@{
    ViewBag.Title = "Building Details";
}
<div id="header" class="container" style="width:100%">
    <h2>Building number @Model.Building.id_budynku Details</h2>
    <a href="@Url.Action("EditResidence", "Residences")?buildingId=@Model.Building.id_budynku"><i class="fas fa-plus fa-3x hoverable green-text"></i></a>
</div>
<div id="tableContainer" class="container">
    <table id="residencesTable" class="table table-striped table-bordered" style="width:100%">
        <thead>
        <tr>
            @*Options*@
            <th scope="col" class="col-sm-1"></th>
            <th scope="col" class="col-sm-1"></th>
            <th scope="col" class="col-1">Residence ID</th>
            <th scope="col" class="col-1">Number</th>
            <th scope="col" class="col-1">Surface</th>
            <th scope="col" class="col-7">Description</th>
            @*Iterate each element in model for given row in table.*@
        </tr>
        </thead>
        <tbody>
        @if (Model?.Items?.Count > 0)
        {
            foreach (var residence in Model.Items)
            {
                <tr>
                    <td><a href="@Url.Action("EditResidence", "Residences")?buildingId=@residence.id_budynku&residenceId=@residence.id_mieszkania"><i class="fas fa-book mr-2 grey-text hoverable"></i></a></td>
                    <td>
                        <a href="@Url.Action("DeleteResidence", "Residences", new {buildingId = residence.id_budynku, residenceId = residence.id_mieszkania})"><i class="fas fa-dumpster hoverable red-text" aria-hidden="true"></i></a>
                    </td>
                    <td>@residence.id_mieszkania</td>
                    <td>@residence.numer</td>
                    <td>@residence.metraz</td>
                    <td>@residence.opis</td>

                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" style="text-align: center">No items to display.</td>
            </tr>
        }

        </tbody>
    </table>
</div>
<div class="container" id="buildingOptionsContainer">
    <h2>Edit Building</h2>
    <div id="buildingAddress" class="md-form">
        <input value="@Model.Building.adres_budynku" type="text" id="buildingAddressInput" class="md-form">
        <label for="buildingAddressInput">Building Address</label>
    </div>

    <div id="controlButtons" class="container" style="float: right">
        <button onclick="onChangesConfirm(@Model.Building.id_budynku)" type="button" class="btn btn-success">Confirm</button>
        @if (Model?.Items?.Count > 0)
        {
            <button onmouseenter="showDeleteButtonInfo()" onmouseleave="hideDeleteButtonInfo()" id="deleteBuildingButton" type="button" class="btn btn-danger" 
                    data-toggle="popover" data-trigger="focus" title="Cannot delete" data-placement="Top" data-content="Cannot delete building that has assigned residences. Delete residences first.">Delete</button>
        }
        else
        {
            <button id="deleteBuildingButton" onclick="deleteBuilding(@Model.Building.id_budynku)" type="button" class="btn btn-danger">Delete</button>
        }
    </div>
</div>

<div class="modal fade" id="wrongInputModal" tabindex="-1" role="dialog" aria-labelledby="wrongInputLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="wrongInputLabel">Incorrect input</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Building address cannot be empty!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<script>
    //Initializes components.
    $(document).ready(function () {
        var table = $('#residencesTable').DataTable();
        $('.dataTables_length').addClass('bs-select');

        $('.popover-dismiss').popover({
            trigger: 'focus'
        });

    });
    //Shows explanation to the user why is the delete button disabled (it is when the building has any residences assigned)
    function showDeleteButtonInfo() {
        $('#deleteBuildingButton').popover('show');
    }
    //Shows explanation to the user why is the delete button disabled (it is when the building has any residences assigned)
    function hideDeleteButtonInfo() {
        $('#deleteBuildingButton').popover('hide');
    }
    

    function onChangesConfirm(buildingId) {
        var newAddress = $('#buildingAddressInput')[0].value;

        if (newAddress === null) {
            $('#wrongInputModal').modal('show'); //show popup - one of required data chunks is incomplete.
        } else if (newAddress === "") {
            $('#wrongInputModal').modal('show'); //show popup - one of required data chunks is incomplete.
        } else {
                $.post("@Url.Action("ConfirmBuildingChange", "Residences")",
                {
                    buildingId: buildingId,
                    address: newAddress
                }).then(function() {
                    window.location.href = window.location.href;
            });
        }
    }
    //Removes building of given ID, then returns to Residences Index page.
    function deleteBuilding(buildingId) {
        $.post("@Url.Action("DeleteBuilding", "Residences")",
            {
                buildingId: buildingId
            }).then(function() {
            location.href = "@Url.Action("Index", "Residences")";
        });
    }
</script>