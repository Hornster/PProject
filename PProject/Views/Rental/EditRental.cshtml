@model PProject.Models.Rentals.RentalEditDataViewModel
@{
    ViewBag.Title = "Edit Rental";
}

<input value="@Model.RentalId" id="rentalId" style="visibility: hidden">

<div id="editInputs" class="container" style="float: left; width: 100%">
    <div class="jumbotron">
        <h2>@ViewBag.Title</h2>
        <div id="pesel" class="md-form">
            <input value="@Model.PESEL" type="text" id="residentPESELInput" class="form-control">
            <label for="residentPESELInput">Resident PESEL</label>
        </div>
        <div id="residenceNumber" class="md-form">
            <input value="@Model.ResidenceNumber" type="number" min="1" id="residenceNumberInput" class="form-control">
            <label for="residenceNumberInput">Residence Number</label>
        </div>
        <div id="buildingAddress" class="md-form">
            <input value="@Model.BuildingAddress" type="text" id="buildingAddressInput" class="form-control">
            <label for="buildingAddressInput">Building Address</label>
        </div>
        <div id="startDate" class="md-form">
            <input value="@Model.StartDate.ToString()" type="text" id="startDateInput" class="form-control"
                   data-toggle="popover" data-trigger="focus" title="Wrong format" data-placement="Right" data-content="Date format incorrect. Try: yyyy-mm-dd hh:mm:ss.">
            <label for="startDateInput">Start Date</label>
        </div>
        <div id="expiringDate" class="md-form">
            <input value="@Model.ExpiringDate.ToString()" type="text" id="expiringDateInput" class="form-control"
                   data-toggle="popover" data-trigger="focus" title="Wrong format" data-placement="Right" data-content="Date format incorrect. Try: yyyy-mm-dd hh:mm:ss.">
            <label for="expiringDateInput">Expiring Date</label>
        </div>
        <div id="price" class="md-form">
            <input value="@Model.RentalPrice" type="number" step="any" min="0" id="rentalPriceInput" class="form-control">
            <label for="rentalPriceInput">Price</label>
        </div>
    </div>
</div>

<div id="controlButtons" class="container" style="float: right">
    <button onclick="onChangesConfirm()" type="button" class="btn btn-success">Confirm</button>
    <button onclick="onCancel()" type="button" class="btn btn-light">Cancel</button>
</div>

<div class="modal fade" id="wrongInputModal" tabindex="-1" role="dialog" aria-labelledby="wrongInputLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="wrongInputLabel">Incorrect input</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Resident PESEL, residence number and building address must be given!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<script>
    //Initializes components.
    $(document).ready(function() {
        $('.popover-dismiss').popover({
            trigger: 'focus'
        });

    });

    function onChangesConfirm() {
        var dateWrong = false;
        var rentalId = $('#rentalId')[0].value;
        var residentPESEL = $('#residentPESELInput')[0].value;
        var buildingAddress = $('#buildingAddressInput')[0].value;
        var residenceNumber = $('#residenceNumberInput')[0].value;
        var startDate = $('#startDateInput')[0].value;
        var expiringDate = $('#expiringDateInput')[0].value;
        var rentalPrice = $('#rentalPriceInput')[0].value;
        var convertedStartDate = null;
        var convertedExpiringDate = null;

        if (startDate !== null && startDate !== "") {
            try {
                convertedStartDate = new Date(startDate).toISOString();
            } catch (ex) {
                showPopupStartDate();
                dateWrong = true; //Remember that there was something wrong with ate and give user chance to correct it.
            }
        }
        if (expiringDate !== null && expiringDate !== "") {
            try {
                convertedExpiringDate = new Date(expiringDate).toISOString();
            } catch (ex) {
                showPopupExpiringDate();
                dateWrong = true; //Remember that there was something wrong with ate and give user chance to correct it.
            }
        }
        if (!dateWrong) {
            if (!allNecessaryFieldsFilled(residentPESEL, buildingAddress, residenceNumber)) {
                $('#wrongInputModal').modal('show'); //show popup - one of required data chunks is incomplete.
            } else {
                $.post("@Url.Action("ConfirmRentalEdit", "Rental")",
                    {
                        rentalId: rentalId,
                        residentPESEL: residentPESEL,
                        buildingAddress: buildingAddress,
                        residenceNumber: residenceNumber,
                        startDate: convertedStartDate,
                        expiringDate: convertedExpiringDate,
                        rentalPrice: rentalPrice
                    }).then(function() {
                        location.href = '@Url.Action("Index", "Rental")';
                    });
            }
        }
    }
    //Something was wrong with start date input. Show popup.
    function showPopupStartDate() {
        $('#startDateInput').popover('show');
    }
    //Something was wrong with expiring date input. Show popup.
    function showPopupExpiringDate() {
        $('#expiringDateInput').popover('show');
    }
    function onCancel() {
        location.href = '@Url.Action("Index", "Rental")';
    }

    function allNecessaryFieldsFilled(residentPESEL, buildingAddress, residenceNumber) {
        if (residentPESEL === null || buildingAddress === null
            || residenceNumber === null) {
            return false; //show popup - one of required data chunks is incomplete.
        } else if (residentPESEL === "" || buildingAddress === ""
            || residenceNumber === "") {
            return false; //show popup - one of required data chunks is incomplete.
        }

        return true;
    }
</script>
